#version 450
#extension GL_KHR_shader_subgroup_vote: enable
#extension GL_KHR_shader_subgroup_arithmetic: enable

layout(local_size_x = 32, local_size_y = 32, local_size_z = 1) in;

layout(set = 0, binding = 0) buffer readonly Kernel {
    float[] weights;
};
layout(set = 0, binding = 1, rgba8) uniform restrict image2D image;

/* float sum_weights(float x, float  y) { */
/*     return x + y; */ 
/* } */

void main() {

    ivec2 px = ivec2(gl_WorkGroupID.xy * uvec2(32, 32) +  gl_LocalInvocationID.xy);

    vec4 res = imageLoad(image, px) + vec4(
            0.0, // kernel.elements[0],
            0.0, // kernel.elements[1],
            weights[2],
            1.0
    );

    /* // Box blur */
    /* vec4 res = vec4(0.0, 0.0, 0.0, 0.0); */

    /* for (int i = -8; i <= 8; i++) { */
    /*     for (int j = -8; j <= 8; j++) { */
    /*         res += imageLoad(myStorageImage, px + ivec2(i, j)); */ 
    /*     } */
    /* } */

    /* res /= 17*17; */

    imageStore(image, ivec2(gl_GlobalInvocationID.xy), res);
}

